# VST1 multi-element, type == 0b0111, align == 0b10 -> undefined
# RUN: echo "0xaf 0xb7 0x07 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST1 multi-element, type == 0b0111, align == 0b11 -> undefined
# RUN: echo "0xbf 0xb7 0x07 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST1 multi-element, type == 0b1010, align == 0b11 -> undefined
# RUN: echo "0xbf 0x8a 0x03 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST1 multi-element, type == 0b0110, align == 0b10 -> undefined
# RUN: echo "0xaf 0xb6 0x07 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST1 multi-element, type == 0b0110, align == 0b11 -> undefined
# RUN: echo "0xbf 0xb6 0x07 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST2 multi-element, type == 0b0100, align == 0b11 -> undefined
# RUN: echo "0x4f 0xa8 0x07 0xf7" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST2 multi-element, type == 0b0100, align == 0b11 -> undefined
# RUN: echo "0x4f 0xa9 0x07 0xf7" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST3 multi-element, size = 0b11 -> undefined
# RUN: echo "0xbf 0xa4 0x0b 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST3 multi-element, align = 0b10 -> undefined
# RUN: echo "0x6f 0xa4 0x0b 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST3 multi-element, align = 0b11 -> undefined
# RUN: echo "0x7f 0xa4 0x0b 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# VST4 multi-element, size = 0b11 -> undefined
# RUN: echo "0xcf 0x50 0x03 0xf4" | llvm-mc -triple=armv7 -show-encoding -disassemble 2>&1 | FileCheck %s

# CHECK: invalid instruction encoding

